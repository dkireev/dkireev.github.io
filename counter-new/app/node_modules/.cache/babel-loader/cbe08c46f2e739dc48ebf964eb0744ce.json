{"ast":null,"code":"var _jsxFileName = \"/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js\";\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport assetsVolume from \"./data/assetsVolume\";\nimport { assets } from \"./data/data\";\nimport useExchange from \"./data/useExchange\";\nimport depositsInterest from \"./data/depositsInterest\";\nconst Deposit = React.memo(({\n  interest\n}) => {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, interest.toFixed(2), \" UAH\");\n});\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n  const rates = useExchange();\n  const total = Object.keys(assets).map(item => assetsVolume(assets[item], rates)).reduce((acc, item) => {\n    return acc + item;\n  }, 0);\n  const totalUAH = total * rates.UAH;\n  const interest = depositsInterest(); // console.log(depositsInterest());\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, counter), isNaN(total) ? \"Loading...\" : `${totalUAH.toFixed(2)} UAH`, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(Deposit, {\n    interest: interest,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    onClick: () => setCounter(counter + 1),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"increment\"));\n};\n\nexport default React.memo(App);","map":{"version":3,"sources":["/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js"],"names":["React","useState","assetsVolume","assets","useExchange","depositsInterest","Deposit","memo","interest","toFixed","App","counter","setCounter","rates","total","Object","keys","map","item","reduce","acc","totalUAH","UAH","isNaN"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAEA,MAAMC,OAAO,GAAGN,KAAK,CAACO,IAAN,CAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC3C,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,QAAQ,CAACC,OAAT,CAAiB,CAAjB,CAAN,SAAP;AACD,CAFe,CAAhB;;AAIA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMY,KAAK,GAAGT,WAAW,EAAzB;AACA,QAAMU,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYb,MAAZ,EACXc,GADW,CACNC,IAAD,IAAUhB,YAAY,CAACC,MAAM,CAACe,IAAD,CAAP,EAAeL,KAAf,CADf,EAEXM,MAFW,CAEJ,CAACC,GAAD,EAAMF,IAAN,KAAe;AACrB,WAAOE,GAAG,GAAGF,IAAb;AACD,GAJW,EAIT,CAJS,CAAd;AAKA,QAAMG,QAAQ,GAAGP,KAAK,GAAGD,KAAK,CAACS,GAA/B;AACA,QAAMd,QAAQ,GAAGH,gBAAgB,EAAjC,CATgB,CAUhB;;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMM,OAAN,CADF,EAEGY,KAAK,CAACT,KAAD,CAAL,GAAe,YAAf,GAA+B,GAAEO,QAAQ,CAACZ,OAAT,CAAiB,CAAjB,CAAoB,MAFxD,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,oBAAC,OAAD;AAAS,IAAA,QAAQ,EAAED,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAME;AAAQ,IAAA,OAAO,EAAE,MAAMI,UAAU,CAACD,OAAO,GAAG,CAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANF,CADF;AAUD,CAtBD;;AAwBA,eAAeX,KAAK,CAACO,IAAN,CAAWG,GAAX,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport assetsVolume from \"./data/assetsVolume\";\nimport { assets } from \"./data/data\";\nimport useExchange from \"./data/useExchange\";\nimport depositsInterest from \"./data/depositsInterest\";\n\nconst Deposit = React.memo(({ interest }) => {\n  return <div>{interest.toFixed(2)} UAH</div>;\n});\n\nconst App = () => {\n  const [counter, setCounter] = useState(0);\n  const rates = useExchange();\n  const total = Object.keys(assets)\n    .map((item) => assetsVolume(assets[item], rates))\n    .reduce((acc, item) => {\n      return acc + item;\n    }, 0);\n  const totalUAH = total * rates.UAH;\n  const interest = depositsInterest();\n  // console.log(depositsInterest());\n\n  return (\n    <div className=\"App\">\n      <div>{counter}</div>\n      {isNaN(total) ? \"Loading...\" : `${totalUAH.toFixed(2)} UAH`}\n      <br />\n      <br />\n      <Deposit interest={interest} />\n      <button onClick={() => setCounter(counter + 1)}>increment</button>\n    </div>\n  );\n};\n\nexport default React.memo(App);\n"]},"metadata":{},"sourceType":"module"}