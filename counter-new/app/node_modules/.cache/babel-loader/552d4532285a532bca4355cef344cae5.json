{"ast":null,"code":"var _jsxFileName = \"/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport AssetsVolume from \"./data/AssetsVolume\";\nimport { assets } from \"./data/data\";\n\nconst App = () => {\n  const rates = useExchange();\n  const totalArray = Object.keys(assets).map(item => AssetsVolume(assets[item]));\n  const total = totalArray.reduce((acc, item) => {\n    return acc + item;\n  }, 0);\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, isNaN(total) ? \"Loading...\" : `Total: ${total.toFixed(2)} USD`);\n};\n\nexport default React.memo(App);","map":{"version":3,"sources":["/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js"],"names":["React","useExchange","AssetsVolume","assets","App","rates","totalArray","Object","keys","map","item","total","reduce","acc","isNaN","toFixed","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGJ,WAAW,EAAzB;AACA,QAAMK,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,GAApB,CAAyBC,IAAD,IACzCR,YAAY,CAACC,MAAM,CAACO,IAAD,CAAP,CADK,CAAnB;AAGA,QAAMC,KAAK,GAAGL,UAAU,CAACM,MAAX,CAAkB,CAACC,GAAD,EAAMH,IAAN,KAAe;AAC7C,WAAOG,GAAG,GAAGH,IAAb;AACD,GAFa,EAEX,CAFW,CAAd;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KAAK,CAACH,KAAD,CAAL,GAAe,YAAf,GAA+B,UAASA,KAAK,CAACI,OAAN,CAAc,CAAd,CAAiB,MAD5D,CADF;AAKD,CAdD;;AAgBA,eAAef,KAAK,CAACgB,IAAN,CAAWZ,GAAX,CAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport AssetsVolume from \"./data/AssetsVolume\";\nimport { assets } from \"./data/data\";\n\nconst App = () => {\n  const rates = useExchange();\n  const totalArray = Object.keys(assets).map((item) =>\n    AssetsVolume(assets[item])\n  );\n  const total = totalArray.reduce((acc, item) => {\n    return acc + item;\n  }, 0);\n\n  return (\n    <div className=\"App\">\n      {isNaN(total) ? \"Loading...\" : `Total: ${total.toFixed(2)} USD`}\n    </div>\n  );\n};\n\nexport default React.memo(App);\n"]},"metadata":{},"sourceType":"module"}