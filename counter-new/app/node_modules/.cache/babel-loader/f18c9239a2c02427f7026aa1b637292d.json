{"ast":null,"code":"import { assets } from \"./data\";\nimport useExchange from \"./useExchange\";\n\nconst DepositsInterest = () => {\n  const rates = useExchange();\n  const timestamp = new Date().getTime();\n  const accumulated = assets.deposits.map(item => {\n    let time = new Date(item.start).getTime();\n    let secondsAccumalated = (timestamp - time) / 1000;\n    let interestInSecond = item.interest / 31557600; //Stands from 365.25 / 24 / 60 / 60;\n\n    console.log(interestInSecond * secondsAccumalated * item.amount / 100);\n  });\n  return accumulated;\n};\n\nexport default DepositsInterest;","map":{"version":3,"sources":["/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/data/DepositsInterest.js"],"names":["assets","useExchange","DepositsInterest","rates","timestamp","Date","getTime","accumulated","deposits","map","item","time","start","secondsAccumalated","interestInSecond","interest","console","log","amount"],"mappings":"AAAA,SAASA,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,KAAK,GAAGF,WAAW,EAAzB;AACA,QAAMG,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAlB;AACA,QAAMC,WAAW,GAAGP,MAAM,CAACQ,QAAP,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AAChD,QAAIC,IAAI,GAAG,IAAIN,IAAJ,CAASK,IAAI,CAACE,KAAd,EAAqBN,OAArB,EAAX;AACA,QAAIO,kBAAkB,GAAG,CAACT,SAAS,GAAGO,IAAb,IAAqB,IAA9C;AACA,QAAIG,gBAAgB,GAAGJ,IAAI,CAACK,QAAL,GAAgB,QAAvC,CAHgD,CAGC;;AACjDC,IAAAA,OAAO,CAACC,GAAR,CAAaH,gBAAgB,GAAGD,kBAAnB,GAAwCH,IAAI,CAACQ,MAA9C,GAAwD,GAApE;AACD,GALmB,CAApB;AAMA,SAAOX,WAAP;AACD,CAVD;;AAYA,eAAeL,gBAAf","sourcesContent":["import { assets } from \"./data\";\nimport useExchange from \"./useExchange\";\n\nconst DepositsInterest = () => {\n  const rates = useExchange();\n  const timestamp = new Date().getTime();\n  const accumulated = assets.deposits.map((item) => {\n    let time = new Date(item.start).getTime();\n    let secondsAccumalated = (timestamp - time) / 1000;\n    let interestInSecond = item.interest / 31557600; //Stands from 365.25 / 24 / 60 / 60;\n    console.log((interestInSecond * secondsAccumalated * item.amount) / 100);\n  });\n  return accumulated;\n};\n\nexport default DepositsInterest;\n"]},"metadata":{},"sourceType":"module"}