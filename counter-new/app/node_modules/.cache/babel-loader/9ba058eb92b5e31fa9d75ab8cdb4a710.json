{"ast":null,"code":"var _jsxFileName = \"/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport { securitiesLowRisk } from \"./data/data\";\nimport CryptoExchange from \"./data/CryptoExchange\";\n\nconst App = () => {\n  const rates = useExchange();\n  const securitiesLowRiskAmount = 1 / rates.EUR * securitiesLowRisk.amount;\n  const total = CryptoExchange() + SecuritiesHiRiskExchange() + securitiesLowRiskAmount;\n  const totalUAH = total * rates.UAH;\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Total: \", totalUAH.toFixed(2), \" USD\");\n};\n\nexport default React.memo(App); // Object.keys(a).map(key => `Key ${key} - value ${a[key]}`)","map":{"version":3,"sources":["/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js"],"names":["React","useExchange","securitiesLowRisk","CryptoExchange","App","rates","securitiesLowRiskAmount","EUR","amount","total","SecuritiesHiRiskExchange","totalUAH","UAH","toFixed","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGJ,WAAW,EAAzB;AACA,QAAMK,uBAAuB,GAAI,IAAID,KAAK,CAACE,GAAX,GAAkBL,iBAAiB,CAACM,MAApE;AACA,QAAMC,KAAK,GACTN,cAAc,KAAKO,wBAAwB,EAA3C,GAAgDJ,uBADlD;AAEA,QAAMK,QAAQ,GAAGF,KAAK,GAAGJ,KAAK,CAACO,GAA/B;AAEA,SAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BD,QAAQ,CAACE,OAAT,CAAiB,CAAjB,CAA7B,SAAP;AACD,CARD;;AAUA,eAAeb,KAAK,CAACc,IAAN,CAAWV,GAAX,CAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport { securitiesLowRisk } from \"./data/data\";\nimport CryptoExchange from \"./data/CryptoExchange\";\n\nconst App = () => {\n  const rates = useExchange();\n  const securitiesLowRiskAmount = (1 / rates.EUR) * securitiesLowRisk.amount;\n  const total =\n    CryptoExchange() + SecuritiesHiRiskExchange() + securitiesLowRiskAmount;\n  const totalUAH = total * rates.UAH;\n\n  return <div className=\"App\">Total: {totalUAH.toFixed(2)} USD</div>;\n};\n\nexport default React.memo(App);\n\n// Object.keys(a).map(key => `Key ${key} - value ${a[key]}`)\n"]},"metadata":{},"sourceType":"module"}