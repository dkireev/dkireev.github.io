{"ast":null,"code":"var _jsxFileName = \"/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport AssetsVolume from \"./data/AssetsVolume\";\nimport { assets } from \"./data/data\";\n\nconst App = () => {\n  const rates = useExchange();\n  const total = AssetsVolume(assets.crypto) + AssetsVolume(assets.securities) + AssetsVolume(assets.deposits);\n  const totalUAH = total * rates.UAH;\n  console.log(assets.forEach((asset, i) => AssetsVolume(assets[asset])));\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, isNaN(total) ? \"Loading...\" : `Total: ${total.toFixed(2)} USD`, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), isNaN(totalUAH) ? \"Loading...\" : `Total: ${totalUAH.toFixed(2)} UAH`);\n};\n\nexport default React.memo(App); // Object.keys(a).map(key => `Key ${key} - value ${a[key]}`)","map":{"version":3,"sources":["/Users/dkireiev/Documents/dkireev.github.io/counter-new/src/App.js"],"names":["React","useExchange","AssetsVolume","assets","App","rates","total","crypto","securities","deposits","totalUAH","UAH","console","log","forEach","asset","i","isNaN","toFixed","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAMC,KAAK,GAAGJ,WAAW,EAAzB;AACA,QAAMK,KAAK,GACTJ,YAAY,CAACC,MAAM,CAACI,MAAR,CAAZ,GACAL,YAAY,CAACC,MAAM,CAACK,UAAR,CADZ,GAEAN,YAAY,CAACC,MAAM,CAACM,QAAR,CAHd;AAIA,QAAMC,QAAQ,GAAGJ,KAAK,GAAGD,KAAK,CAACM,GAA/B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACW,OAAP,CAAe,CAACC,KAAD,EAAQC,CAAR,KAAcd,YAAY,CAACC,MAAM,CAACY,KAAD,CAAP,CAAzC,CAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,KAAK,CAACX,KAAD,CAAL,GAAe,YAAf,GAA+B,UAASA,KAAK,CAACY,OAAN,CAAc,CAAd,CAAiB,MAD5D,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGD,KAAK,CAACP,QAAD,CAAL,GAAkB,YAAlB,GAAkC,UAASA,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,CAAoB,MAJlE,CADF;AAQD,CAjBD;;AAmBA,eAAelB,KAAK,CAACmB,IAAN,CAAWf,GAAX,CAAf,C,CAEA","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport useExchange from \"./data/useExchange\";\nimport AssetsVolume from \"./data/AssetsVolume\";\nimport { assets } from \"./data/data\";\n\nconst App = () => {\n  const rates = useExchange();\n  const total =\n    AssetsVolume(assets.crypto) +\n    AssetsVolume(assets.securities) +\n    AssetsVolume(assets.deposits);\n  const totalUAH = total * rates.UAH;\n  console.log(assets.forEach((asset, i) => AssetsVolume(assets[asset])));\n\n  return (\n    <div className=\"App\">\n      {isNaN(total) ? \"Loading...\" : `Total: ${total.toFixed(2)} USD`}\n      <br />\n      <br />\n      {isNaN(totalUAH) ? \"Loading...\" : `Total: ${totalUAH.toFixed(2)} UAH`}\n    </div>\n  );\n};\n\nexport default React.memo(App);\n\n// Object.keys(a).map(key => `Key ${key} - value ${a[key]}`)\n"]},"metadata":{},"sourceType":"module"}