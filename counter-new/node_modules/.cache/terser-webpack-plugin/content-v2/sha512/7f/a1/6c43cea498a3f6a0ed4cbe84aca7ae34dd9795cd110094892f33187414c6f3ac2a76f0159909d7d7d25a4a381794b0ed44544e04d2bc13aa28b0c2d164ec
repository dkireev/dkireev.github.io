{"map":"{\"version\":3,\"sources\":[\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\components\\\\Icon.tsx\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\components\\\\AddGoal.tsx\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\components\\\\Header.tsx\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\components\\\\Modal.tsx\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\App.js\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\serviceWorker.js\",\"E:\\\\Dima\\\\FrontEnd\\\\dkireev.github.io\\\\dkireev.github.io\\\\counter-new\\\\src\\\\index.js\"],\"names\":[\"Icon\",\"_this$props\",\"this\",\"props\",\"source\",\"size\",\"react_default\",\"a\",\"createElement\",\"src\",\"width\",\"alt\",\"React\",\"PureComponent\",\"AddGoalContainer\",\"styled\",\"_templateObject\",\"AddGoal\",\"Icon_Icon\",\"HeaderContainer\",\"Header_templateObject\",\"Header\",\"ModalContainer\",\"Modal_templateObject\",\"Modal\",\"AppContainer\",\"App_templateObject\",\"Section\",\"_templateObject2\",\"App\",\"Header_Header\",\"AddGoal_AddGoal\",\"Modal_Modal\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"config\",\"navigator\",\"serviceWorker\",\"register\",\"then\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"state\",\"controller\",\"console\",\"log\",\"onUpdate\",\"onSuccess\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"App_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"href\",\"origin\",\"addEventListener\",\"concat\",\"fetch\",\"response\",\"contentType\",\"headers\",\"get\",\"status\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\r\\n\\r\\ninterface IProps {\\r\\n    source: string;\\r\\n    size: number;\\r\\n}\\r\\n\\r\\nexport default class Icon extends React.PureComponent<IProps> {\\r\\n    render() {\\r\\n        const { source, size } = this.props;\\r\\n        return (\\r\\n            <img src={'/icons/' + source + '.svg'} width={size} alt=\\\"\\\" />\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\r\\nimport styled from 'styled-components';\\r\\nimport Icon from './Icon';\\r\\n\\r\\nconst AddGoalContainer = styled('div')`\\r\\n    width: 48px;\\r\\n    height: 48px;\\r\\n    background-color: green;\\r\\n    position: fixed;\\r\\n    right: 16px;\\r\\n    bottom: 32px;\\r\\n    border-radius: 50%;\\r\\n    display: grid;\\r\\n    align-items: center;\\r\\n    justify-items: center;\\r\\n    box-shadow: 0 5px 5px rgba(0,0,0,.15);\\r\\n`;\\r\\n\\r\\nexport const AddGoal = () => {\\r\\n        return (\\r\\n            <AddGoalContainer>\\r\\n                <Icon source={'plus'} size={32} />\\r\\n            </AddGoalContainer>\\r\\n        )\\r\\n}\\r\\n\",\"import React from 'react';\\r\\nimport styled from 'styled-components';\\r\\nimport Icon from './Icon';\\r\\n\\r\\nconst HeaderContainer = styled('div')`\\r\\n    background-color: #282c34;\\r\\n    height: 48px;\\r\\n    padding: 0 16px;\\r\\n    color: #fff;\\r\\n    display: grid;\\r\\n    grid-auto-flow: column;\\r\\n    align-items: center;\\r\\n    justify-content: start;\\r\\n    grid-column-gap: 32px;\\r\\n    span {\\r\\n        line-height: 1;\\r\\n    }\\r\\n`;\\r\\n\\r\\nexport default class Header extends React.PureComponent {\\r\\n    render () {\\r\\n        return (\\r\\n            <HeaderContainer>\\r\\n                <Icon source={'menu'} size={24}/>\\r\\n                <span>Personal goals</span>\\r\\n            </HeaderContainer>\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\r\\nimport styled from 'styled-components';\\r\\n\\r\\nconst ModalContainer = styled('div')`\\r\\n    position: absolute;\\r\\n    background-color: blue;\\r\\n`;\\r\\n\\r\\nexport default class Modal extends React.PureComponent {\\r\\n    render () {\\r\\n        return (\\r\\n            <ModalContainer>ss</ModalContainer>\\r\\n        )\\r\\n    }\\r\\n}\",\"import React from 'react';\\nimport styled from 'styled-components';\\nimport { AddGoal } from './components/AddGoal';\\nimport Header from './components/Header';\\nimport Modal from './components/Modal';\\n\\nconst AppContainer = styled('div')`\\n  height: 100vh;\\n  display: grid;\\n  grid-auto-flow: row;\\n  position: relative;\\n`;\\nconst Section = styled('div')`\\n  height: calc(100vh - 48px);\\n  padding: 16px;\\n  display: grid;\\n  align-items: center;\\n  text-align: center;\\n`;\\n\\nexport default class App extends React.PureComponent {\\n  render() {\\n    return (\\n      <AppContainer>\\n        <Header />\\n        <Section>\\n          <span>You have no any goals yet...</span>\\n        </Section>\\n        <AddGoal />\\n        <Modal />\\n      </AppContainer>\\n    );\\n  }\\n}\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.register();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{16:function(n,e,t){n.exports=t(30)},22:function(n,e,t){},30:function(n,e,t){\"use strict\";t.r(e);var r=t(0),o=t.n(r),a=t(8),i=t.n(a),c=(t(22),t(3)),u=t(4),l=t(6),s=t(5),d=t(7),f=t(1),p=t(2),h=function(n){function e(){return Object(c.a)(this,e),Object(l.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(d.a)(e,n),Object(u.a)(e,[{key:\"render\",value:function(){var n=this.props,e=n.source,t=n.size;return o.a.createElement(\"img\",{src:\"/icons/\"+e+\".svg\",width:t,alt:\"\"})}}]),e}(o.a.PureComponent);function g(){var n=Object(f.a)([\"\\n    width: 48px;\\n    height: 48px;\\n    background-color: green;\\n    position: fixed;\\n    right: 16px;\\n    bottom: 32px;\\n    border-radius: 50%;\\n    display: grid;\\n    align-items: center;\\n    justify-items: center;\\n    box-shadow: 0 5px 5px rgba(0,0,0,.15);\\n\"]);return g=function(){return n},n}var b=Object(p.a)(\"div\")(g()),v=function(){return o.a.createElement(b,null,o.a.createElement(h,{source:\"plus\",size:32}))};function m(){var n=Object(f.a)([\"\\n    background-color: #282c34;\\n    height: 48px;\\n    padding: 0 16px;\\n    color: #fff;\\n    display: grid;\\n    grid-auto-flow: column;\\n    align-items: center;\\n    justify-content: start;\\n    grid-column-gap: 32px;\\n    span {\\n        line-height: 1;\\n    }\\n\"]);return m=function(){return n},n}var j=Object(p.a)(\"div\")(m()),w=function(n){function e(){return Object(c.a)(this,e),Object(l.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(d.a)(e,n),Object(u.a)(e,[{key:\"render\",value:function(){return o.a.createElement(j,null,o.a.createElement(h,{source:\"menu\",size:24}),o.a.createElement(\"span\",null,\"Personal goals\"))}}]),e}(o.a.PureComponent);function O(){var n=Object(f.a)([\"\\n    position: absolute;\\n    background-color: blue;\\n\"]);return O=function(){return n},n}var y=Object(p.a)(\"div\")(O()),k=function(n){function e(){return Object(c.a)(this,e),Object(l.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(d.a)(e,n),Object(u.a)(e,[{key:\"render\",value:function(){return o.a.createElement(y,null,\"ss\")}}]),e}(o.a.PureComponent);function E(){var n=Object(f.a)([\"\\n  height: calc(100vh - 48px);\\n  padding: 16px;\\n  display: grid;\\n  align-items: center;\\n  text-align: center;\\n\"]);return E=function(){return n},n}function x(){var n=Object(f.a)([\"\\n  height: 100vh;\\n  display: grid;\\n  grid-auto-flow: row;\\n  position: relative;\\n\"]);return x=function(){return n},n}var C=Object(p.a)(\"div\")(x()),P=Object(p.a)(\"div\")(E()),W=function(n){function e(){return Object(c.a)(this,e),Object(l.a)(this,Object(s.a)(e).apply(this,arguments))}return Object(d.a)(e,n),Object(u.a)(e,[{key:\"render\",value:function(){return o.a.createElement(C,null,o.a.createElement(w,null),o.a.createElement(P,null,o.a.createElement(\"span\",null,\"You have no any goals yet...\")),o.a.createElement(v,null),o.a.createElement(k,null))}}]),e}(o.a.PureComponent),A=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function z(n,e){navigator.serviceWorker.register(n).then(function(n){n.onupdatefound=function(){var t=n.installing;null!=t&&(t.onstatechange=function(){\"installed\"===t.state&&(navigator.serviceWorker.controller?(console.log(\"New content is available and will be used when all tabs for this page are closed. See http://bit.ly/CRA-PWA.\"),e&&e.onUpdate&&e.onUpdate(n)):(console.log(\"Content is cached for offline use.\"),e&&e.onSuccess&&e.onSuccess(n)))})}}).catch(function(n){console.error(\"Error during service worker registration:\",n)})}i.a.render(o.a.createElement(W,null),document.getElementById(\"root\")),function(n){if(\"serviceWorker\"in navigator){if(new URL(\"\",window.location.href).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"\",\"/service-worker.js\");A?(function(n,e){fetch(n).then(function(t){var r=t.headers.get(\"content-type\");404===t.status||null!=r&&-1===r.indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(n){n.unregister().then(function(){window.location.reload()})}):z(n,e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e,n),navigator.serviceWorker.ready.then(function(){console.log(\"This web app is being served cache-first by a service worker. To learn more, visit http://bit.ly/CRA-PWA\")})):z(e,n)})}}()}},[[16,2,1]]]);","extractedComments":[]}